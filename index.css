body {
    color: #4C9B9A !important;
    /* Mavi */
    font-family: 'Arial', sans-serif;
}

.topbar {
    height: 45px;
    background-color: #d8f1f1;
    border-bottom: 3px solid rgb(245, 245, 227);
}

.topbar-bottom {
    height: 40px;
}

.nav-link {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-size: 19px !important;
}

h1 {
    color: #4C9B9A !important;
    /* Mavi */
    font-size: 50px !important;
}

h2 {
    color: #A8D5BA !important;
    /* Açık Yeşil */
}

.banner {
    background-color: #d8f1f1;
}

.banner-text {
    font-size: 20px;
    color: rgb(0, 0, 0);
    text-align: justify;
}

/*
CSS @property and the New Style
https://ryanmulligan.dev/blog/css-property-new-style/
*/
@import url("https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,500&display=swap");

:root {
    --shiny-cta-bg: #32ceb4;
    --shiny-cta-bg-subtle: #b7f3f0;
    --shiny-cta-fg: #ffffff;
    --shiny-cta-highlight: rgb(9, 185, 89);
    --shiny-cta-highlight-subtle: #0b468a;
}

@property --gradient-angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}

@property --gradient-angle-offset {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}

@property --gradient-percent {
    syntax: "<percentage>";
    initial-value: 5%;
    inherits: false;
}

@property --gradient-shine {
    syntax: "<color>";
    initial-value: white;
    inherits: false;
}

.shiny-cta {
    --animation: gradient-angle linear infinite;
    --duration: 3s;
    --shadow-size: 2px;
    isolation: isolate;
    position: relative;
    overflow: hidden;
    cursor: pointer;
    outline-offset: 4px;
    padding: 1.25rem 2.5rem;
    font-family: inherit;
    font-size: 1.125rem;
    line-height: 1.2;
    border: 1px solid transparent;
    border-radius: 360px;
    color: var(--shiny-cta-fg);
    background: linear-gradient(var(--shiny-cta-bg), var(--shiny-cta-bg)) padding-box,
        conic-gradient(from calc(var(--gradient-angle) - var(--gradient-angle-offset)),
            transparent,
            var(--shiny-cta-highlight) var(--gradient-percent),
            var(--gradient-shine) calc(var(--gradient-percent) * 2),
            var(--shiny-cta-highlight) calc(var(--gradient-percent) * 3),
            transparent calc(var(--gradient-percent) * 4)) border-box;
    box-shadow: inset 0 0 0 1px var(--shiny-cta-bg-subtle);

    &::before,
    &::after,
    span::before {
        content: "";
        pointer-events: none;
        position: absolute;
        inset-inline-start: 50%;
        inset-block-start: 50%;
        translate: -50% -50%;
        z-index: -1;
    }

    &:active {
        translate: 0 1px;
    }
}

/* Dots pattern */
.shiny-cta::before {
    --size: calc(100% - var(--shadow-size) * 3);
    --position: 2px;
    --space: calc(var(--position) * 2);
    width: var(--size);
    height: var(--size);
    background: radial-gradient(circle at var(--position) var(--position),
            white calc(var(--position) / 4),
            transparent 0) padding-box;
    background-size: var(--space) var(--space);
    background-repeat: space;
    mask-image: conic-gradient(from calc(var(--gradient-angle) + 45deg),
            rgb(86, 238, 238),
            transparent 10% 90%,
            rgb(95, 235, 240));
    border-radius: inherit;
    opacity: 0.4;
    z-index: -1;
}

/* Inner shimmer */
.shiny-cta::after {
    --animation: shimmer linear infinite;
    width: 100%;
    aspect-ratio: 1;
    background: linear-gradient(-50deg,
            transparent,
            var(--shiny-cta-highlight),
            transparent);
    mask-image: radial-gradient(circle at bottom, transparent 40%, black);
    opacity: 0.6;
}

.shiny-cta span {
    z-index: 1;

    &::before {
        --size: calc(100% + 1rem);
        width: var(--size);
        height: var(--size);
        box-shadow: inset 0 -1ex 2rem 4px var(--shiny-cta-highlight);
        opacity: 0;
    }
}

/* Animate */
.shiny-cta {
    --transition: 800ms cubic-bezier(0.25, 1, 0.5, 1);
    transition: var(--transition);
    transition-property: --gradient-angle-offset, --gradient-percent,
        --gradient-shine;

    &,
    &::before,
    &::after {
        animation: var(--animation) var(--duration),
            var(--animation) calc(var(--duration) / 0.4) reverse paused;
        animation-composition: add;
    }

    span::before {
        transition: opacity var(--transition);
        animation: calc(var(--duration) * 1.5) breathe linear infinite;
    }
}

.shiny-cta:is(:hover, :focus-visible) {
    --gradient-percent: 20%;
    --gradient-angle-offset: 95deg;
    --gradient-shine: var(--shiny-cta-highlight-subtle);

    &,
    &::before,
    &::after {
        animation-play-state: running;
    }

    span::before {
        opacity: 1;
    }
}

@keyframes gradient-angle {
    to {
        --gradient-angle: 360deg;
    }
}

@keyframes shimmer {
    to {
        rotate: 360deg;
    }
}

@keyframes breathe {

    from,
    to {
        scale: 1;
    }

    50% {
        scale: 1.2;
    }
}

article {
    --img-scale: 1.001;
    --title-color: black;
    --link-icon-translate: -20px;
    --link-icon-opacity: 0;
    position: relative;
    border-radius: 16px;
    box-shadow: none;
    background: #fff;
    transform-origin: center;
    transition: all 0.4s ease-in-out;
    overflow: hidden;
    border: 1px solid #befaf5;
}

article a::after {
    position: absolute;
    inset-block: 0;
    inset-inline: 0;
    cursor: pointer;
    content: "";
}

/* basic article elements styling */
article h2 {
    margin: 0 0 18px 0;
    font-family: "Bebas Neue", cursive;
    font-size: 1.9rem;
    letter-spacing: 0.06em;
    color: var(--title-color);
    transition: color 0.3s ease-out;
}

figure {
    margin: 0;
    padding: 0;
    aspect-ratio: 16 / 9;
    overflow: hidden;
}

article img {
    max-width: 100%;
    transform-origin: center;
    transform: scale(var(--img-scale));
    transition: transform 0.4s ease-in-out;
}

.article-body {
    padding: 24px;
}

article a {
    display: inline-flex;
    align-items: center;
    text-decoration: none;
    color: #28666e;
}

article a:focus {
    outline: 1px dotted #28666e;
}

article a .icon {
    min-width: 24px;
    width: 24px;
    height: 24px;
    margin-left: 5px;
    transform: translateX(var(--link-icon-translate));
    opacity: var(--link-icon-opacity);
    transition: all 0.3s;
}

/* using the has() relational pseudo selector to update our custom properties */
article:has(:hover, :focus) {
    --img-scale: 1.1;
    --title-color: #28666e;
    --link-icon-translate: 0;
    --link-icon-opacity: 1;
    box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,
        rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;
}

/************************ 
  Generic layout (demo looks)
  **************************/

*,
*::before,
*::after {
    box-sizing: border-box;
}


.articles {
    display: grid;
    margin-inline: auto;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 24px;
}

@media screen and (max-width: 960px) {
    article {
        container: card/inline-size;
    }

    .article-body p {
        display: none;
    }
}

@container card (min-width: 380px) {
    .article-wrapper {
        display: grid;
        grid-template-columns: 100px 1fr;
        gap: 16px;
    }

    .article-body {
        padding-left: 0;
    }

    figure {
        width: 100%;
        height: 100%;
        overflow: hidden;
    }

    figure img {
        height: 100%;
        aspect-ratio: 1;
        object-fit: cover;
    }
}

.sr-only:not(:focus):not(:active) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.CTA {
    padding-top: 0px;
    background-color: #ffffff;
    padding-bottom: 20px;
}

.hizmetler {
    text-align: center;
    padding: 60px 20px;
    background-color: #f9f9f9;
}

.hizmetler h2 {
    font-size: 2em;
    margin-bottom: 20px;
    color: #333;
}

.hizmetler-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    max-width: 1200px;
    margin: auto;
}

.hizmet {
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
}

.hizmet:hover {
    transform: translateY(-5px);
}

.hizmet img {
    width: 60px;
    height: 60px;
    margin-bottom: 15px;
}

.hizmet h3 {
    font-size: 1.5em;
    color: #444;
}

.hizmet p {
    font-size: 1em;
    color: #666;
}

.hakkimizda {
    background-color: #d8f1f1;
}

.hakkimizda-container {
    display: flex;
    flex-wrap: wrap;
    max-width: 1200px;
    margin: auto;
    gap: 140px;
}

.hakkimizda-text {
    flex: 1;
    min-width: 300px;
    max-width: 450px;
    font-size: 19px;
    color: rgb(0, 0, 0);
    text-align: justify;

}

.hakkimizda-text h2 {
    font-size: 2em;
    color: #333;
    margin-bottom: 15px;
}

.hakkimizda-text p {
    font-size: 1.1em;
    color: #555;
    line-height: 1.6;
    margin-bottom: 10px;
}

.hakkimizda-text .btn {
    display: inline-block;
    margin-top: 15px;
    padding: 10px 20px;
    background-color: #0073e6;
    color: white;
    text-decoration: none;
    border-radius: 5px;
    transition: 0.3s;
}

.hakkimizda-text .btn:hover {
    background-color: #005bb5;
}

.hakkimizda-image {
    flex: 1;
    text-align: center;
}

.hakkimizda-image img {
    max-width: 100%;
    border-radius: 330px;
}

.referanslar {
    text-align: center;
    padding: 60px 20px;
    background-color: #d8f1f1;
}

.referanslar h2 {
    font-size: 2em;
    margin-bottom: 20px;
    color: #333;
}

.referans-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    max-width: 1000px;
    margin: auto;
}

.referans {
    background: rgb(255, 255, 255);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    width: 300px;
    transition: transform 0.3s ease;
}

.referans:hover {
    transform: translateY(-5px);
}

.referans p {
    font-size: 1em;
    color: #666;
    font-style: italic;
    margin-bottom: 10px;
}

.referans h4 {
    font-size: 1.1em;
    color: #444;
}

.iletisim {
    text-align: center;
    padding: 60px 20px;
    background-color: #ffffff;
}

.iletisim h2 {
    font-size: 2em;
    margin-bottom: 20px;
    color: #333;
}

.iletisim-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    margin-top: 30px;
}

.iletisim-bilgileri {
    flex: 1;
    max-width:450px;
    text-align: left;
}

.iletisim-bilgileri p {
    font-size: 1.1em;
    margin-bottom: 10px;
}

.iletisim-bilgileri i {
    margin-right: 10px;
    color: #007BFF;
}

.iletisim-form {
    flex: 1;
    max-width: 400px;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.iletisim-form input,
.iletisim-form textarea {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 1em;
}

.iletisim-form textarea {
    height: 120px;
}

.iletisim-form button {
    background-color: #007BFF;
    color: white;
    padding: 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1.1em;
}

.iletisim-form button:hover {
    background-color: #0056b3;
}

.harita {
    margin-top: 30px;
}

.sss {
    text-align: center;
    padding: 60px 20px;
    background-color: #d8f1f1;
}

.sss h2 {
    font-size: 2em;
    margin-bottom: 20px;
    color: #333;
}

.sss-container {
    max-width: 700px;
    margin: auto;
}

.sss-item {
    background: white;
    border-radius: 5px;
    margin-bottom: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    overflow: hidden;
}

.sss-soru {
    width: 100%;
    text-align: left;
    padding: 15px;
    font-size: 1.2em;
    border: none;
    background: #58c2b4;
    color: white;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.sss-soru i {
    transition: transform 0.3s ease;
}

.sss-cevap {
    display: none;
    padding: 15px;
    font-size: 1em;
    background: #f1f1f1;
    color: #333;
}

/* Açılan cevabın animasyonu */
.sss-item.aktif .sss-cevap {
    display: block;
}

.sss-item.aktif .sss-soru i {
    transform: rotate(180deg);
}

.footer {
    background-color: #eee7e7;
    color: rgb(0, 0, 0);
    padding: 40px 20px;
    text-align: center;
}

.footer-container {
    display: flex;
    justify-content: space-between;
    gap: 30px;
    max-width: 1200px;
    margin: auto;
    flex-wrap: wrap;
}

.footer h4 {
    font-size: 1.5em;
    margin-bottom: 10px;
    color: #000000;
}

.footer-links ul {
    list-style: none;
    padding: 0;
}

.footer-links ul li {
    margin-bottom: 10px;
}

.footer-links a {
    text-decoration: none;
    color: #000000;
    font-size: 1.1em;
}

.footer-links a:hover {
    color: #007BFF;
}

.footer-social .social-icons a {
    margin-right: 15px;
    font-size: 1.5em;
    color: #000000;
}

.footer-social .social-icons a:hover {
    color: #007BFF;
}

.footer-contact p {
    font-size: 1.1em;
    margin: 10px 0;
}

.footer-bottom {
    margin-top: 40px;
    font-size: 1.1em;
    color: #000000;
}

.footer-bottom p {
    margin: 0;
}

.footer .fa {
    margin-right: 10px;
}

.footer-top {
    padding-top: 80px;
    background-color: #ffffff;
}

.su-damlasi {
    width: 500px;  /* Daha büyük genişlik */
    height: 500px; /* Daha uzun */
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    background: radial-gradient(circle at 50% 20%, #e0f7fa, #b2ebf2); /* Hafif ışık efekti */
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3); /* Daha doğal gölge */
    border-radius: 50% 50% 40% 40% / 60% 60% 40% 40%; /* Daha organik bir damla şekli */
}

.su-damlasi img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.hakkimizda-two-text {
    flex: 1;
    min-width: 300px;
    max-width: 450px;
    font-size: 16px;
    color: rgb(0, 0, 0);
    text-align: justify;
}
/*mobil*/
@media (max-width: 768px) {
    .topbar {
        display: none;
    }
    .collapse.navbar-collapse {
        display: block !important; /* D-flex yerine block yap */
        text-align: center; /* İçeriği ortalamak için isteğe bağlı */
    }
}

